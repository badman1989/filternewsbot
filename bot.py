import os
import asyncio
import logging
from aiogram import Bot, Dispatcher, types, Router
from aiogram.filters import Command
from aiogram.types import Message
from telethon import TelegramClient
from dotenv import load_dotenv

# üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# üöÄ –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ Railway (–∏–ª–∏ .env)
API_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
API_ID = int(os.getenv("TELEGRAM_API_ID"))
API_HASH = os.getenv("TELEGRAM_API_HASH")
CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
if not API_TOKEN or len(API_TOKEN) < 40:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π TELEGRAM_BOT_TOKEN!")

print(f"‚úÖ –î–ª–∏–Ω–∞ —Ç–æ–∫–µ–Ω–∞: {len(API_TOKEN)} —Å–∏–º–≤–æ–ª–æ–≤")
print(f"‚úÖ –¢–æ–∫–µ–Ω (–ø–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤): {API_TOKEN[:10]}...")

# üèóÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è aiogram
bot = Bot(token=API_TOKEN)
dp = Dispatcher()
router = Router()
dp.include_router(router)

# üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Telethon
client = TelegramClient("session_name", API_ID, API_HASH)

# üìå –§–∏–ª—å—Ç—Ä —Å–ª–æ–≤ (—á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫)
BLACKLIST = {"–∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ_—Å–ª–æ–≤–æ", "–¥—Ä—É–≥–æ–µ_—Å–ª–æ–≤–æ"}

# üì• –•–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command("start"))
async def start_handler(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ñ–∏–ª—å—Ç—Ä—É—é –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —á—ë—Ä–Ω–æ–º—É —Å–ø–∏—Å–∫—É —Å–ª–æ–≤.")

# üì• –•–µ–Ω–¥–ª–µ—Ä –∫–æ–º–∞–Ω–¥—ã /add_channel
@router.message(Command("add_channel"))
async def add_channel_handler(message: Message):
    text = message.text.split(maxsplit=1)
    if len(text) < 2:
        await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /add_channel @channel_username")
        return
    channel = text[1]
    await message.answer(f"–ö–∞–Ω–∞–ª {channel} –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫.")

# üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def fetch_and_filter_news():
    async with client:
        async for message in client.iter_messages(CHAT_ID, limit=20):
            if not any(word in message.text.lower() for word in BLACKLIST):
                await bot.send_message(CHAT_ID, message.text)

# üöÄ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async def main():
    async with client:
        print("üöÄ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        await dp.start_polling(bot)

# üîÑ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ event loop
if __name__ == "__main__":
    asyncio.run(main())
